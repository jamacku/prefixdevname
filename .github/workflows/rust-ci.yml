---

name: Rust CI
on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  check:
    name: Cargo Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install latest nightly rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy

      - name: Install libudev devel package
        run: sudo apt-get install -y libudev-dev

      # `cargo check` command here will use installed `nightly`
      # as it is set as an "override" for current directory

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Cargo Test & Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install latest nightly rust
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true

      - name: Install libudev and libumockdev devel packages
        run: sudo apt-get install -y libudev-dev libumockdev-dev

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'

      - name: Generate coverage data
        id: coverage
        uses: actions-rs/grcov@v0.1

      - name: CodeCov - Upload coverage data
        uses: codecov/codecov-action@v3
        with:
          files: ${{ steps.coverage.outputs.report }}
          fail_ci_if_error: false

...
